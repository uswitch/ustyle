/// Returns a `rem` value from pixels
///
/// @param {Number (unit)} $pixels
///   The pixel number you want converted to `rem`
///
/// @param {Number (unit)} $font-size [$base-font-size]
///   The font-size relative to `rems`
///
/// @return {Unit}

@function rem($pixels, $font-size: $base-font-size) {
  @return $pixels / $font-size * 1rem;
}

/// Returns a `em` value from pixels
///
/// @param {Number (unit)} $pixels
///   The pixel number you want converted to `em`
///
/// @param {Number (unit)} $font-size [$base-font-size]
///   The font-size relative to `ems`
///
/// @return {Unit}

@function em($pixels, $font-size: $base-font-size) {
  @return $pixels / $font-size * 1em;
}

/// Returns a column % from `$grid-columns`
///
/// @param {Number (unitless)} $columns
///   The column number to convert to a % of the grid
///
/// @return {Unit (percentage)}

@function col-width($columns) {
  @return percentage($columns / $grid-columns);
}

/// Returns a colour based on a black + `$color` percentage mix
///
/// @param {String} $color
///   The colour you want to darken
///
/// @param {Number (unit)} $percentage
///   The percentage amount to mix of black with the colour

@function shade($color, $percentage) {
  @return mix(#000, $color, $percentage);
}

/// Returns a colour based on a white + `$color` percentage mix
///
/// @param {String} $color
///   The colour you want to darken
///
/// @param {Number (unit)} $percentage
///   The percentage amount to mix of white with the colour

@function tint($color, $percentage) {
  @return mix(#fff, $color, $percentage);
}

/// Returns the opposite direction of each direction in a list
/// @param {List} $directions - List of initial directions
/// @return {List} - List of opposite directions

@function opposite-direction($directions) {
  $opposite-directions: ();
  $directions-normal: "top", "bottom", "left", "right", "up", "down";
  $directions-opposite: "bottom", "top", "right", "left", "down", "up";

  @each $direction in $directions {
    $opposite-directions: append($opposite-directions, unquote(nth($directions-opposite, index($directions-normal, $direction))));
  }

  @return $opposite-directions;
}
